// -----------------------------------------------------------------------------
// This file contains mixins for generating helper classes in all 4 directions
// of an element.
//
// Courtesy of:
//   https://github.com/allejo/bzion/blob/master/web/assets/css/abstracts/_axes-builder.scss
// -----------------------------------------------------------------------------

@function axis-directions() {
    @return (null, t, r, b, l, x, y);
}

@mixin build-axis($axis, $prop, $value) {
    @if $axis == null {
        #{$prop}:        $value !important;
    }
    @else if $axis == t {
        #{$prop}-top:    $value !important;
    }
    @else if $axis == r {
        #{$prop}-right:  $value !important;
    }
    @else if $axis == b {
        #{$prop}-bottom: $value !important;
    }
    @else if $axis == l {
        #{$prop}-left:   $value !important;
    }
    @else if $axis == x {
        #{$prop}-right: $value !important;
        #{$prop}-left:  $value !important;
    }
    @else if $axis == y {
        #{$prop}-top:    $value !important;
        #{$prop}-bottom: $value !important;
    }
}

@mixin build-axes($abbrev, $size, $prop, $suffix, $value) {
    .droopy-#{$abbrev}#{$size}#{$suffix}  { @include build-axis(null, $prop, $value); }
    .droopy-#{$abbrev}t#{$size}#{$suffix} { @include build-axis(t, $prop, $value); }
    .droopy-#{$abbrev}r#{$size}#{$suffix} { @include build-axis(r, $prop, $value); }
    .droopy-#{$abbrev}b#{$size}#{$suffix} { @include build-axis(b, $prop, $value); }
    .droopy-#{$abbrev}l#{$size}#{$suffix} { @include build-axis(l, $prop, $value); }
    .droopy-#{$abbrev}x#{$size}#{$suffix} { @include build-axis(x, $prop, $value); }
    .droopy-#{$abbrev}y#{$size}#{$suffix} { @include build-axis(y, $prop, $value); }
}

@mixin build-axes-last($abbrev, $prop, $value) {
    @each $a in axis-directions() {
        .#{$abbrev}#{$a}-last-reset .#{$abbrev}#{$a}:last-of-type {
            @include build-axis($a, $prop, $value);
        }
    }
}
